@page "/ai-documenteditor/smart-ai-assist"

@using Syncfusion.Blazor.DocumentEditor;
@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Inputs;
@using Syncfusion.Blazor.Spinner
@using System.ClientModel
@using System.Text.Json
@using System.IO
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.InteractiveChat
@using BlazorDemos.Pages.AISamples.DocumentEditor.Shared
@using SmartComponents.LocalEmbeddings
@using BlazorDemos.Service

@inject CustomAIService openAIBackend
@inject LocalEmbedder embedder
@using BlazorDemos.Pages.AISamples.DocumentEditor.Shared
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates how the Syncfusion® Blazor Word Processor integrates AI capabilities to enhance content creation. Users can generate new content from prompts, refine existing content, and produce summaries or Q&A responses based on the document.</p>
    <p>
        Explore our <strong>Smart AI demos</strong> with limited AI token usage directly in your browser. To dive deeper and try out these features locally using your own API key, check out our
        <a href="https://github.com/syncfusion/smart-ai-samples/tree/master/blazor" target="_blank" aria-label="Navigate to the Syncfusion Smart AI Samples GitHub repository">
            <strong>Syncfusion Smart AI Samples</strong>
        </a> on GitHub.
    </p>
</SampleDescription>

<ActionDescription>
    <p><strong><h4>AI-Powered Content Assistance:</h4></strong></p>
    <p>The Word Processor integrates AI to support dynamic content creation and enhancement. Users can generate new content, expand ideas, and refine their writing with intelligent suggestions tailored to their input:</p>
    <ul>
        <li>
            <p><strong>Generate New Content:</strong> Users can click the <strong>Generate New Content</strong> button without selecting any existing text to open a prompt window. By entering a brief idea or keyword, the AI generates fresh content aligned with the user's intent. The generated content is temporarily inserted at the cursor’s position, allowing users to maintain writing flow. A <strong>Stop Generating</strong> button is available during this process to cancel if needed.</p>
        </li>
        <li>
            <p><strong>Idea Expansion:</strong> This feature helps users develop and elaborate on initial concepts. By entering a prompt, users can receive expanded content with options to adjust the tone, format, and size to better suit their writing goals. If the result needs refinement, users can provide a more specific prompt and click <strong>Regenerate</strong> to improve the output.</p>
        </li>
        <li>
            <p><strong>Seamless Insertion Controls:</strong> After content is generated, users can choose to keep it in the document or discard it with a button click.</p>
        </li>
    </ul>
    <br>
    <p><strong><h4>Refine Existing Content:</h4></strong></p>
    <p>The Word Processor allows users to enhance selected text using AI-powered refinement tools. With a single click, users can improve clarity, correct grammar, and adapt the tone to better suit the context—all within the editor.</p>
    <ul>
        <li>
            <p><strong>Rewriting:</strong> Rephrase sentences or paragraphs to improve readability and adjust tone. Changes are highlighted for easy comparison and review.</p>
        </li>
        <li>
            <p><strong>Grammar Check:</strong> This feature automatically detects and suggests corrections for grammatical issues, ensuring polished and professional writing.</p>
        </li>
        <li>
            <p><strong>Translation:</strong> Convert content into different languages to support multilingual communication or better understand foreign-language text.</p>
        </li>
    </ul>
    <br>
    <p><strong><h4>Document Summarization and Q&A:</h4></strong></p>
    <p>This feature helps users quickly understand and interact with document content using AI-powered summarization and question-answering tools.</p>
    <ul>
        <li>
            <p><strong>Summarization:</strong> Instantly generate a concise overview of a document, highlighting key points and main ideas. This helps users grasp the essence of lengthy or complex content with minimal effort.</p>
        </li>
        <li>
            <p><strong>Q&A:</strong> Ask questions related to the document to retrieve specific information. Users can enter their own queries or choose from AI-suggested questions to explore the content.</p>
        </li>
    </ul>
</ActionDescription>

@*Hidden:Lines*@
<AINotification></AINotification>
@*End:Hidden*@

@*Hidden:Lines*@
<AIToastNotification></AIToastNotification>
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div id="target">
            <div id='documenteditor_titlebar' class="e-de-ctn-title">
                <div class="single-line" id="documenteditor_title_contentEditor" style="border: 1px solid transparent;" title="Document Name." contenteditable="false">
                    <label id="documenteditor_title_name" class="doc-edit-title"> @DocumentName</label>
                </div>
                <div style="float: right">
                    <SfButton IconCss="e-de-icon-Print" CssClass="title-bar-btn" @onclick="Print">Print</SfButton>
                </div>
                <div style="float: right">
                    <SfButton IconCss="e-de-icon-Download" CssClass="title-bar-btn" @onclick="OnExport">Download</SfButton>
                </div>
            </div>
            <div id="documentEditorDiv" style="width:@CurrentWidth;float:left;height:600px">
                <SfDocumentEditorContainer id="document-editor" Height="100%" Width="100%" @ref="container" UseDefaultEditor="false" EnableToolbar=true ToolbarItems="@Items" ShowPropertiesPane="@ShowProperties" DocumentEditorSettings="settings">
                    <DocumentEditorContainerEvents Created="OnCreated" BeforePaneSwitch="@BeforePaneSwitch" DocumentChanged="OnDocumentChange"></DocumentEditorContainerEvents>
                    <SfDocumentEditor @ref="editor">
                        <DocumentEditorEvents ZoomFactorChanged="@ZoomFactorChanged" />
                    </SfDocumentEditor>
                </SfDocumentEditorContainer>
                <AIPopup PopupType="@PopupType" InputText="@EditorText" IsVisibleDialog="@IsVisibleDialog" OnChange="OnInsert" isSmartEditor="@isSmartEditor" AIAssistBtnVisible="@AIAssistBtnVisible" AIChatBtnVisible="@AIChatBtnVisible" AssistBtnLeft="@AssistBtnLeft" AssistBtnTop="@AssistBtnTop" AssistBtnWidth="@AssistBtnWidth" AssistBtnHeight="@AssistBtnHeight" @bind-IsRephraseContent="IsRephraseContent" />
            </div>
            <div class="ai-chat-container" style="width:35%;float:right;height:@divHeight;position:relative;display:@AIAssistVisible;">
                <SfAIAssistView @ref="AIAssist" PromptSuggestions="@_promptSuggestions" PromptPlaceholder="Type prompt" CssClass="e-aiassist-chat" Created="AssistOnCreated" ResponseIconCss="e-aiassist-chat-icon" PromptIconCss="e-aiassist-chat-icon" PromptRequested="@PromptRequest" ShowHeader="true">
                    <ChildContent>
                        <AssistViews>
                            <AssistView Header="AI Assistant" IconCss="e-icons e-aiassist-chat-header">
                                <BannerTemplate>
                                    <div class="ai-assist-banner">
                                        <div class="e-icons e-aiassist-page-icon"></div>
                                        <div class="e-aiassist-page-header">How can I help you?</div>
                                    </div>
                                </BannerTemplate>
                                <ChildContent>
                                    <PromptToolbar ItemClicked="promptToolbarClick"></PromptToolbar>
                                    <ResponseToolbar ItemClicked="promptToolbarClick">
                                        <ResponseToolbarItem IconCss="e-icons e-copy" Tooltip="copy"></ResponseToolbarItem>
                                        <ResponseToolbarItem IconCss="e-btn-icon e-de-ctnr-new" Tooltip="insert"></ResponseToolbarItem>
                                    </ResponseToolbar>
                                </ChildContent>
                            </AssistView>
                        </AssistViews>
                        <AssistViewToolbar ItemClicked="promptToolbarClick">
                            <AssistViewToolbarItem Type="ItemType.Spacer" CssClass="check"></AssistViewToolbarItem>
                            <AssistViewToolbarItem Type="ItemType.Button" IconCss="e-icons e-close" Tooltip="Close"></AssistViewToolbarItem>
                        </AssistViewToolbar>
                    </ChildContent>
                </SfAIAssistView>
            </div>
        </div>
    </div>
</div>

<style>
    .title-bar-btn, .title-bar-btn:hover, .title-bar-btn:focus {
    background: transparent;
    box-shadow: none;
    font-family: inherit;
    border-color: transparent;
    border-radius: 2px;
    color: inherit;
    font-size: 12px;
    text-transform: capitalize;
    height: 28px;
    margin-top: 2px;
    }

    [class^="e-de-icon-"],
    [class*=" e-de-icon-"],
    .e-de-icon-Print:before,
    .e-de-icon-Download:before {
    font-family: 'Sample brower icons' !important;
    }

    .e-de-icon-Print:before {
    content: "\e723";
    }

    .e-de-icon-Download:before {
    content: "\e728";
    }

    .print-ctnr {
    cursor: pointer;
    margin-top: 6px;
    }

    #documenteditor_titlebar {
    border-bottom: 1px solid #3f51b5;
    height: 36px;
    line-height: 2px;
    width: 100%;
    font-size: 12px;
    padding-left: 15px;
    padding-right: 10px;
    font-family: inherit;
    }

    #documenteditor_title_contentEditor {
    height: 26px;
    max-width: 85%;
    width: auto;
    overflow: hidden;
    display: inline-block;
    padding-left: 4px;
    padding-right: 4px;
    margin: 5px;
    }

    .doc-edit-title {
    text-transform: capitalize;
    font-family: inherit;
    text-overflow: ellipsis;
    outline: none;
    white-space: pre;
    overflow: hidden;
    user-select: none;
    cursor: text
    }

    .single-line {
    cursor: text !important;
    outline: none;
    }

    [contenteditable="true"].single-line {
    white-space: nowrap;
    border-color: #e4e4e4 !important;
    }

    /** Document editor sample level font icons*/
    @@font-face {
    font-family: 'Sample brower icons';
    src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
    font-weight: normal;
    font-style: normal;
    }

    #documenteditor_title_name {
    line-height: 1;
    margin-top: 5px;
    }

    .e-aiassist-chat .e-aiassist-header-icon.e-icons.e-icon-left {
    min-width: 0;
    padding: 0;
    }

    .e-aiassist-chat .e-view-header .e-tbar-btn-text {
    font-weight: 600;
    line-height: 20px;
    }

    .doc-edit-title,
    .e-aiassist-chat .e-view-header .e-icons.e-close,
    .e-aiassist-chat .e-aiassist-page-icon::before,
    .e-aiassist-chat .e-aiassist-page-header,
    .title-bar-btn, .title-bar-btn:hover, .title-bar-btn:focus {
    font-weight: 400;
    }

    .e-aiassist-chat .e-view-content .ai-assist-banner {
    display: flex;
    flex-direction: column;
    height: 348px;
    align-items: center;
    text-align: center;
    }

    #ai-assist-banner h1,
    .e-bigger .e-aiassist-chat .e-view-header .e-icons.e-close {
    font-size: 20px !important;
    }

    #ai-assist-banner h2 {
    font-size: 19px;
    }

    #ai-assist-banner h3 {
    font-size: 18px;
    }

    #ai-assist-banner h4 {
    font-size: 17px;
    }

    #ai-assist-banner h5,
    .e-bigger .e-aiassist-chat .e-view-header .e-tbar-btn-text,
    .e-aiassist-chat .e-view-header .e-icons.e-close,
    .e-aiassist-chat .e-aiassist-page-icon::before,
    .e-bigger .e-aiassist-chat .e-suggestions li {
    font-size: 16px !important;
    }

    #ai-assist-banner h6 {
    font-size: 15px;
    }

    .e-aiassist-chat .e-view-header .e-tbar-btn-text,
    .e-aiassist-chat .e-suggestions li,
    .e-bigger .e-aiassist-chat .e-aiassist-page-header {
        font-size: 14px !important;
    }

    .ai-chat-container {
    display: flex;
    flex-direction: column;
    background-color: #f8f9fa;
    padding: 0px;
    box-sizing: border-box;
    }

    .ai-chat-container .e-aiassist-chat {
    border-left: 0;
    }

    .e-aiassist-chat .e-footer,
    .e-aiassist-chat .e-views .e-view-container  {
    width: 96%;
    }

    .e-aiassist-chat .e-aiassist-chat-icon::before,
    .e-aiassist-chat .e-aiassist-page-icon::before  {
    content: '\e7b4';
    }

    .e-aiassist-chat .e-aiassist-page-icon::before {
    height: 16px;
    width: 16px;
    }

    .e-bigger .e-aiassist-chat .e-aiassist-page-icon::before {
    height: 22px;
    width: 22px;
    font-size: 22px;
    }

    .e-aiassist-chat .e-aiassist-page-icon {
    color: #616161;
    width: 40px;
    height: 40px;
    background-color: #e6e6e6;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    }

    .e-bigger .e-aiassist-chat .e-aiassist-page-icon {
    width: 56px;
    height: 56px;
    }

    .e-aiassist-chat .e-aiassist-page-header {
    font-size: 12px;
    margin: 12px;
    line-height: 16px;
    }

    .e-bigger .e-aiassist-chat .e-aiassist-page-header {
    line-height: 20px;
    }

    .e-aiassist-chat .e-suggestions li {
    height: 36px;
    font-weight: 400 !important;
    line-height: 18px !important;
    padding: 8px 12px !important;
    margin-bottom: 12px !important;
    }

    .e-bigger .e-aiassist-chat .e-suggestions li {
    height: 40px;
    line-height: 20px !important;
    padding: 9px 16px !important;
    }
</style>

@code{
    public string PopupType = string.Empty;
    private string EditorText = string.Empty;
    private bool IsVisibleDialog = false;
    private bool isSmartEditor = false;
    private bool AIChatBtnVisible = true;
    private bool AIAssistBtnVisible = false;
    internal string DocumentName { get; set; } = "Getting Started";
    SfDocumentEditorContainer container;
    SfDocumentEditor editor;
    DocumentEditorSettingsModel settings = new DocumentEditorSettingsModel() { ShowRuler = true };
    private SfAIAssistView AIAssist;
    private bool isDocumentChanged = false;
    private DocumentSummarizer summarizer;
    private int AssistBtnLeft;
    private int AssistBtnTop;
    private int AssistBtnWidth;
    private int AssistBtnHeight;
    public bool IsRephraseContent { get; set; }
    private List<string> _promptSuggestions = new List<string>();
    private bool VisibleProperty { get; set; } = false;
    private string CurrentWidth { get; set; } = "100%";
    private bool ShowProperties { get; set; } = true;
    private string Description = string.Empty;
    private string divHeight = "150%";
    private string AIAssistVisible = "none";
    private string PlaceholderText = string.Empty;
    private bool isAIAssistantChecked = false;
    private bool IsInitialLoad = true;

    List<Object> Items = new List<Object> { "New", "Open", "Separator", "Undo", "Redo", "Separator", "Image", "Table", "Hyperlink", "Bookmark", "TableOfContents", "Separator", "Header", "Footer", "PageSetup", "PageNumber", "Break", "InsertFootnote", "InsertEndnote", "Separator", "Find", "Separator", "Comments", "TrackChanges", "Separator", "LocalClipboard", "RestrictEditing", "Separator", "FormFields", "UpdateFields" };
    public async void OnCreated(object args)
    {
        string sfdt = "{\"sfdt\":\"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\"}";
        await editor.OpenAsync(sfdt);
        divHeight = await JS.InvokeAsync<string>("getDivHeight", (object)"documentEditorDiv");
        await container.ResizeAsync();
        IsInitialLoad = false;
        await Task.Delay(300);
        CaretCoords position = await JS.InvokeAsync<CaretCoords>("getAIAssistBtnPosition", ShowProperties);
        var x = Convert.ToInt32(double.Parse(position.x.ToString()));
        var y = Convert.ToInt32(double.Parse(position.y.ToString()));
        AssistBtnLeft = x;
        AssistBtnTop = y;
        bool isTouchMode = await JS.InvokeAsync<bool>("isTouchMode");
        AssistBtnHeight = isTouchMode ? 36 : 24;
        AssistBtnWidth = isTouchMode ? 36 : 24;
        AIAssistBtnVisible = true;
        StateHasChanged();
    }                    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.PopupType = "Generate";
            await JSRuntime.InvokeVoidAsync("setupSelectionTracking", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public async Task OnMouseDownDetected()
    {
        string selectedText = await editor.Selection.GetTextAsync();
        if (selectedText != "" && IsRephraseContent)
        {
            IsRephraseContent = false;
            await this.OnInsert(new BlazorDemos.Pages.AISamples.DocumentEditor.Shared.AIPopup.ChangeEventArgs { action = "RemoveContent", InputText = null });
        }
    }

    [JSInvokable]
    public async Task OnMouseUpDetected(double mouseX, double mouseY)
    {
        string selectedText = await editor.Selection.GetTextAsync();
        isSmartEditor = !string.IsNullOrEmpty(selectedText);
        this.IsVisibleDialog = false;
        CaretCoords selectionPosition = await JS.InvokeAsync<CaretCoords>("getSelectionEndPosition", mouseX, mouseY);
        int top = Convert.ToInt32(double.Parse(selectionPosition.y.ToString()));
        CaretCoords position = await JS.InvokeAsync<CaretCoords>("getAIAssistBtnPosition", ShowProperties);
        int left = Convert.ToInt32(double.Parse(position.x.ToString()));
        AssistBtnLeft = left;
        AssistBtnTop = top;
        StateHasChanged();
    }

    private async Task OnInsert(BlazorDemos.Pages.AISamples.DocumentEditor.Shared.AIPopup.ChangeEventArgs args)
    {
        string action = args.action;
        string value = args.InputText;
        if (action == "Clear")
        {
            this.PopupType = string.Empty;
        }
        else if (action == "InsertContent")
        {
            WordDocument document = WordDocument.LoadString(value, ImportFormatType.Html);
            string sfdtString = JsonSerializer.Serialize(document);

            string startPosition = await editor.Selection.GetStartOffsetAsync();

            await editor.Editor.PasteAsync(sfdtString);
            await editor.Editor.InsertTextAsync("\n");

            string endPosition = await editor.Selection.GetEndOffsetAsync();
            await editor.Selection.SelectAsync(startPosition, endPosition);
            this.EditorText = await editor.Selection.GetTextAsync();
            this.PopupType = string.Empty;
        }
        else if (action == "KeepContent")
        {
            string endPosition = await editor.Selection.GetEndOffsetAsync();
            await editor.Selection.SelectAsync(endPosition, endPosition);
            IsRephraseContent = false;
        }
        else if (action == "RemoveContent")
        {
            await editor.Editor.DeleteAsync();
        }
        else if (action == "InputText")
        {
            this.EditorText = await editor.Selection.GetTextAsync();
        }

        else if (action == "ReplaceContent")
        {
            WordDocument document = WordDocument.LoadString(value, ImportFormatType.Html);
            string sfdtText = JsonSerializer.Serialize(document);
            await editor.Editor.PasteAsync(sfdtText);
            await editor.Editor.InsertTextAsync("\n");
            this.PopupType = string.Empty;
        }
        else if (action == "ShowSummarizePopup")
        {
            await this.ShowAIAssistantPane();
        }
    }

    public class CaretCoords
    {
        public double x { get; set; }
        public double y { get; set; }
    }

    private async void BeforePaneSwitch(BeforePaneSwitchEventArgs args)
    {
        if (!IsInitialLoad && container.ShowPropertiesPane != ShowProperties)
        {
            ShowProperties = !ShowProperties;
            await Task.Delay(300);
            CaretCoords position = await JS.InvokeAsync<CaretCoords>("getAIAssistBtnPosition");
            var x = Convert.ToInt32(double.Parse(position.x.ToString()));
            var y = Convert.ToInt32(double.Parse(position.y.ToString()));
            AssistBtnLeft = x;
            AssistBtnTop = y;
            StateHasChanged();
        }
    }

    private async void ZoomFactorChanged(ZoomFactorChangeEventArgs args)
    {
        var zoomLevel = editor.ZoomFactor;
        CaretCoords position = await JS.InvokeAsync<CaretCoords>("getAIAssistBtnPosition");
        var x = Convert.ToInt32(double.Parse(position.x.ToString()));
        var y = Convert.ToInt32(double.Parse(position.y.ToString()));
        AssistBtnLeft = x;
        AssistBtnTop = y;
        var assistBtnSize = Math.Round(24 * zoomLevel);
        AssistBtnHeight = (int)assistBtnSize;
        AssistBtnWidth = (int)assistBtnSize;
        var AIAssistBtnIconSize = Math.Round(14 * zoomLevel);
        await JS.InvokeAsync<string>("setAIAssistBtnIconSize", AIAssistBtnIconSize);
        StateHasChanged();
    }

    public void OnExport(object args)
    {
        SfDocumentEditor documentEditor = editor;
        documentEditor.SaveAsync(DocumentName, FormatType.Docx);
    }
    public void Print(object args)
    {
        SfDocumentEditor documentEditor = editor;
        documentEditor.PrintAsync();
    }

    protected override Task OnInitializedAsync()
    {
        summarizer = new DocumentSummarizer(embedder, openAIBackend);
        return base.OnInitializedAsync();
    }

    private async Task promptToolbarClick(AssistViewToolbarItemClickedEventArgs args)
    {

        if (args.Item.IconCss.EndsWith("close"))
        {
            await this.OnCloseButtonClick();
        }
        else if (args.Item.IconCss.EndsWith("copy"))
        {
            string Response = AIAssist.Prompts[args.DataIndex].Response;
            await JS.InvokeVoidAsync("copyToClipboard", Response);
        }
        else if (args.Item.IconCss.EndsWith("new"))
        {
            string Response = AIAssist.Prompts[args.DataIndex].Response;
            await this.OnInsert(new BlazorDemos.Pages.AISamples.DocumentEditor.Shared.AIPopup.ChangeEventArgs { action = "ReplaceContent", InputText = Response });
        }
    }
    private async Task PromptRequest(AssistViewPromptRequestedEventArgs args)
    {
        string Response = await this.OnArrowButtonClick(args.Prompt);
        args.Response = Response;
    }

    public async void OnDocumentChange()
    {
        isDocumentChanged = true;
        if (!IsInitialLoad)
        {
            await this.Dispose();
            if (!(await editor.GetIsDocumentEmptyAsync()))
                _promptSuggestions = new List<string> { "Summarize this document" };
        }
        StateHasChanged();

    }

    public async void AssistOnCreated(object args)
    {
        if (IsInitialLoad) {
            _promptSuggestions = new List<string> { "Summarize this document" };
        }
    }

    public async Task ShowAIAssistantPane()
    {
        AIChatBtnVisible = false;
        this.isAIAssistantChecked = true;
        this.ShowProperties = false;
        this.CurrentWidth = "65%";
        await container.ResizeAsync();
        await OnSummarizeCLick();
    }

    private async Task OnSummarizeCLick(string? text = null)
    {
        this.AIAssistVisible = "block";
        this.PlaceholderText = "Ask a question about this document.";
        this.VisibleProperty = true;
        if (this.isDocumentChanged)
        {
            _promptSuggestions = new List<string> { "Summarize this document" };
        }
        StateHasChanged();
        this.VisibleProperty = false;
        StateHasChanged();
    }

    private async Task<string> OnArrowButtonClick(string Prompt)
    {
        this.VisibleProperty = true;
        string result = "";
        if (Prompt == "Summarize this document")
        {
            await this.UploadDocument();
            result = await summarizer.GetDocumentSummary();
            string suggestions = await summarizer.GetSuggestions();
            if (!string.IsNullOrEmpty(suggestions))
            {
                _promptSuggestions?.Clear();
                _promptSuggestions = new List<string>(suggestions.Split('\n').Where(s => !string.IsNullOrWhiteSpace(s)));
            }
        }
        else
        {
            string SystemPrompt = $"You are a helpful assistant. Use the provided context to answer the user question. Always respond in proper HTML format, but do not include <html>, <head>, or <body> tags. Context:";
            result = await summarizer.GetAnswer(SystemPrompt, Prompt);
        }
        this.VisibleProperty = false;
        return result;
    }

    private async Task OnCloseButtonClick()
    {
        AIChatBtnVisible = true;
        this.AIAssistVisible = "none";
        this.CurrentWidth = "100%";
        this.isAIAssistantChecked = false;
        this.ShowProperties = true;
        await container.ResizeAsync();
        StateHasChanged();
    }

    private async Task Dispose()
    {
        _promptSuggestions?.Clear();
        AIAssist?.Prompts.Clear();
        JSRuntime?.InvokeVoidAsync("cleanupSelectionTracking");
    }

    private async Task Summarize(string? text = null)
    {
        if (text != null)
        {
            string SystemPrompt = "You are a helpful assistant. Your task is to analyze the provided text and generate short summary. Always respond in proper HTML format, but do not include <html>, <head>, or <body> tags.";
            await summarizer.GetAnswerFromGPT(SystemPrompt, text);
        }
        else
        {
            await this.UploadDocument();
            await summarizer.GetDocumentSummary();
            string suggestions = await summarizer.GetSuggestions();
            _promptSuggestions = new List<string>(suggestions.Split('\n').Where(s => !string.IsNullOrWhiteSpace(s)));
        }
    }

    private async Task UploadDocument()
    {
        string base64Data = await editor.SaveAsBlobAsync(FormatType.Docx);
        byte[] data = Convert.FromBase64String(base64Data);
        base64Data = string.Empty;
        Stream stream = new MemoryStream(data);
        Syncfusion.DocIO.DLS.WordDocument document = new Syncfusion.DocIO.DLS.WordDocument(stream, Syncfusion.DocIO.FormatType.Docx);
        string text = document.GetText();
        this.isDocumentChanged = false;
        await summarizer.LoadDocument(text);
    }

    public class SelectionCoordinates
    {
        public double Left { get; set; }
        public double Top { get; set; }
        public double Width { get; set; }
        public double Height { get; set; }
    }
}

<script>
    let dotNetHelper = null;
    let documentEditorElement = null;
    let isTrackingSelection = false;

    window.getAIAssistBtnPosition = function() {
         var documnetEditor = document.querySelector(".control-section");
         var documnetEditorRect = documnetEditor.getBoundingClientRect();
         var documnetEditorTop = documnetEditorRect.top;
         var documnetEditorLeft = documnetEditorRect.left;
         var viewerContainer = document.querySelector(".e-de-viewercontainer");
         var viewerContainerRect = viewerContainer.getBoundingClientRect();
         var viewerContainerTop = viewerContainerRect.top;
         var viewerContainerLeft = viewerContainerRect.left;
         var cursor = document.querySelector('.e-de-blink-cursor');
         var cursorTop = parseInt(cursor.style.top.split("px")[0], 10);
         var rulerLeft = parseInt(document.querySelector(".e-de-viewercontainer .e-de-hRuler .e-de-hRuler").style.marginLeft.split("px")[0], 10);
         var viewercontainerWidth = document.querySelector(".e-de-hRuler .e-de-hRuler").offsetWidth;
         var AiButtonPosition = viewercontainerWidth / 20;
         var y = (viewerContainerTop - documnetEditorTop) + cursorTop;
         var x = (viewerContainerLeft - documnetEditorLeft) + rulerLeft + AiButtonPosition;
         return { x: x, y: y };
    };

    window.setAIAssistBtnIconSize = function(AIAssistBtnIconSize) {
        var iconElement = document.querySelector(".ai-assist-btn .e-icons.e-ai-assist-btn");
        if (iconElement) {
            iconElement.style.fontSize = AIAssistBtnIconSize + "px";
            iconElement.style.height = AIAssistBtnIconSize + "px";
            iconElement.style.width = AIAssistBtnIconSize + "px";
            iconElement.style.lineHeight = (AIAssistBtnIconSize + 1) + "px";
        }
    }

    window.getSelectionEndPosition = function(x, y) {
        var documnetEditor = document.querySelector(".control-section");
        var documnetEditorRect = documnetEditor.getBoundingClientRect();
        var documnetEditorTop = documnetEditorRect.top;
        var documnetEditorLeft = documnetEditorRect.left;        
        var y = y - documnetEditorTop;
        var x = x - documnetEditorLeft;
        return { x: x, y: y };
    }

    window.setupSelectionTracking = (dotNetObjectReference) => {
        dotNetHelper = dotNetObjectReference;
        documentEditorElement = document.querySelector('.e-de-viewercontainer');
        if (documentEditorElement) {
            documentEditorElement.addEventListener('mousedown', handleMouseDown);
            documentEditorElement.addEventListener('mouseup', handleMouseUp);
        }
    };

    function handleMouseDown(event) {
        isTrackingSelection = true;
        if (dotNetHelper) {
            dotNetHelper.invokeMethodAsync('OnMouseDownDetected');
        }
    }

    function handleMouseUp(event) {
        if (isTrackingSelection && dotNetHelper) {
            const mouseX = event.clientX;
            const mouseY = event.clientY;
            setTimeout(() => {
                dotNetHelper.invokeMethodAsync('OnMouseUpDetected', mouseX, mouseY);
            }, 10);
            isTrackingSelection = false;
        }
    }

    window.cleanupSelectionTracking = () => {
        if (documentEditorElement) {
            documentEditorElement.removeEventListener('mousedown', handleMouseDown);
            documentEditorElement.removeEventListener('mouseup', handleMouseUp);
        }
        dotNetHelper = null;
        documentEditorElement = null;
    };

    window.isTouchMode = () => {
       return document.body.classList.contains('e-bigger') ? true : false;

    }
</script>
